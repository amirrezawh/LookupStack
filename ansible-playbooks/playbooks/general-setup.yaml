- name: Initialize master and worker nodes
  hosts: all
  become: yes
  tasks:
    - name: disable UFW
      service:
        name: ufw
        state: stopped
        enabled: false

    - name: Disable SWAP
      shell: |
        swapoff -a

    - name: Add the br_netfilter
      modprobe:
        name: br_netfilter
        state: present

    - name: Disable SWAP in fstab
      lineinfile:
        path: /etc/fstab
        regexp: '^.*swap.*$'
        line: '#\0'
        backrefs: yes

    - name: set net.bridge.bridge-nf-call-ip6tables in sysctl
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        state: present
        reload: yes

    - name: Installa the apt-utils
      apt:
        name: apt-transport-https
        state: present
        update_cache: yes

    - name: Adding Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adding Docker Repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Installation of Docker
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli

    - name: Starting Service of Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add Kubernetes apt-key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: "0644"
        force: true

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
        state: present
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Create containerd directory
      file:
        path: /etc/containerd
        state: directory

    - name: Add containerd config
      shell: /usr/bin/containerd config default > /etc/containerd/config.toml

    - name: Configuring Systemd cgroup driver for containerd
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: "            SystemdCgroup = false"
        line: "            SystemdCgroup = true"

    - name: Enable the containerd service and start service
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: Install Kubelet
      apt:
        name: kubelet=1.31.*
        state: present
        update_cache: yes

    - name: Install Kubeadm
      apt:
        name: kubeadm=1.31.*
        state: present

    - name: Enable the Kubelet service
      service:
        name: kubelet
        state: restarted
        enabled: yes
        daemon-reload: yes

- hosts: master
  become: yes
  tasks:
    - name: Add kubectl to master nodes
      apt:
        name: kubectl=1.31.*
        state: present
