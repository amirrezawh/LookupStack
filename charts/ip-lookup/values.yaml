

replicaCount: 1

image:
  repository: registry-ce4439d8b9-ip-lookup.apps.ir-central1.arvancaas.ir/ip-lookup
  pullPolicy: IfNotPresent
  tag: "v0.2.1"

imagePullSecrets:
  - name: registry-secret
nameOverride: ""
fullnameOverride: ""


podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 300Mi
  requests:
   cpu: 100m
   memory: 128Mi
livenessProbe:
  httpGet:
    path: /metrics
    port: 8000
readinessProbe:
  httpGet:
    path: /metrics
    port: 8000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

configmap:
  DB_HOST: "postgres-postgresql-ha-pgpool.database.svc.cluster.local"
  DB_USER: "postgres"
secret:
  DATABASE_URL: ""
  DB_PASS: ""

volumes:
  - name: alembic-migrations
    persistentVolumeClaim:
      claimName: ip-lookup-migrations-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts:
 - name: alembic-migrations
   mountPath: "/app/alembic/versions"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
